class Solution:
    def combinationSum3(self, k: int, n: int) -> List[List[int]]:
        def back_tracking(start, index, k, s, n, lst, res):
            if index == k:
                if s == n:
                    res.append(list(lst))
                return
            
            if s > n:
                return
            
            for j in range(start, 10):
                lst.append(j)
                back_tracking(j + 1, index + 1, k, s + j, n, lst, res)
                lst.pop()
        
        lst = []
        res = []
        back_tracking(1, 0, k, 0, n, lst, res)
        return res
        
