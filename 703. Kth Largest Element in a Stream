class KthLargest:

    def __init__(self, k: int, nums: List[int]):
        self.size = k
        self.heap = []
        
        for i, num in enumerate(nums):
            if i < k:
                heapq.heappush(self.heap, num)
            elif num > self.heap[0]:
                heapq.heappushpop(self.heap, num)
        

    def add(self, val: int) -> int:
        if len(self.heap) < self.size:
            heapq.heappush(self.heap, val)
        elif val > self.heap[0]:
            heapq.heappushpop(self.heap, val)
        
        return self.heap[0]
