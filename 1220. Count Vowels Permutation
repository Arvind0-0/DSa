class Solution:
    def countVowelPermutation(self, n: int) -> int:
        MAX = 10**9 + 7
        
        # matrix multiply function
        def multiply(a, b):
            result = [[0] * len(b[0]) for _ in range(len(a))]
            for i in range(len(a)):
                for j in range(len(b[0])):
                    for k in range(len(a[0])):
                        result[i][j] += (a[i][k] * b[k][j]) % MAX
                        result[i][j] %= MAX
            return result
            
        word_matrix = [
            [0, 1, 0, 0, 0],
            [1, 0, 1, 0, 0],
            [1, 1, 0, 1, 1],
            [0, 0, 1, 0, 1],
            [1, 0, 0, 0, 0]
        ]
        
        # create a identity matrix
        result = [[0] * 5 for _ in range(5)]
        
        for i in range(5):
            result[i][i] = 1
        
        s = 0
        n -= 1
        while n:
            if n & 1:
                result = multiply(word_matrix, result)
            n >>= 1
            word_matrix = multiply(word_matrix, word_matrix)
            
        for i in range(5):
            s += sum(result[i])
            
        return s % MAX
